# Assist for Home Assistant
# Board: ESP32_DevKitC_V4 with WROVER
# Microphone: INMP441
# Speaker: MAX98357
# Input: Push-Button
# Outputs: LED Strip

esphome:
  name: assistbig
  comment: Voice Assist on ESP32 DevKit
  friendly_name: VA Igor
  name_add_mac_suffix: true
  on_boot:
    priority: -100
    then:
      - lambda: id(ui_phase) = ${ui_state_starting};
      - script.execute: control_ui

esp32:
  board: esp-wrover-kit
  flash_size: 4MB
  framework:
    type: arduino
    # type: esp-idf
    # version: recommended

logger:
api:
ota:

wifi:
  ssid: !secret ssid
  password: !secret pass

web_server:
  port: 80
  include_internal: true

globals:
  - id: ui_phase
    type: int
    restore_value: no
    initial_value: ${ui_state_starting}

substitutions:
  ui_state_starting: '0'
  ui_state_idle: '1'
  ui_state_listening: '2'
  ui_state_thinking: '4'
  ui_state_replying: '5'
  ui_state_error: '11'
  ui_state_muted: '12'

############################ Buttons / Switches

binary_sensor:
  - platform: gpio
    pin:
      number: 13
      mode:
        input: true
        pullup: true
      inverted: true
    name: Push Button
    id: button
    # Push to talk config ...
    on_press:
      - lambda: id(ui_phase) = ${ui_state_listening};
      - voice_assistant.start:
          silence_detection: false
      - script.execute: control_ui
    on_release:
      - lambda: id(ui_phase) = ${ui_state_thinking};
      - voice_assistant.stop:
      - script.execute: control_ui
    # ... Push to talk config

############################ Lights

spi:
  mosi_pin: 23
  clk_pin: 18

light:
  - platform: spi_led_strip
    num_leds: 32
    id: led_strip
    name: "RGB LED Strip"
    data_rate: 200kHz
    effects:
      - addressable_color_wipe:
          name: "Rotating Red"
          colors:
            - red: 20%
              green: 0%
              blue: 0%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 7
          add_led_interval: 75ms
          reverse: false
      - addressable_color_wipe:
          name: "Rotating Green"
          colors:
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 1
            - red: 0%
              green: 100%
              blue: 0%
              num_leds: 2
              gradient: true
            - red: 0%
              green: 100%
              blue: 0%
              num_leds: 1
            - red: 0%
              green: 100%
              blue: 0%
              num_leds: 2
              gradient: true
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 10
          add_led_interval: 50ms
          reverse: false
      - pulse:
          name: "Fast Pulse"
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 0%
          max_brightness: 50%
      - pulse:
          name: "Slow Pulse"
          transition_length: 500ms
          update_interval: 500ms
          min_brightness: 0%
          max_brightness: 50%
      - pulse:
          name: "Super Slow Pulse"
          transition_length: 2s
          update_interval: 2s
          min_brightness: 0%
          max_brightness: 50%
  - platform: monochromatic
    id: led_mute
    name: "LED Mute"
    output: led1_out
  - platform: monochromatic
    id: led_listening
    name: "LED Listening"
    output: led2_out

output:
  - platform: ledc
    pin: GPIO15
    id: led1_out
  - platform: ledc
    pin: GPIO2
    id: led2_out

############################ Display

image:
  - file: mdi:timer-sand
    id: pic_starting
    resize: 64x64
  - file: mdi:ear-hearing
    id: pic_listening
    resize: 64x64
  - file: mdi:brain
    id: pic_thinking
    resize: 64x64
  - file: mdi:account-voice
    id: pic_answering
    resize: 64x64
  - file: mdi:bomb
    id: pic_error
    resize: 64x64

i2c:
  sda: 21
  scl: 22
  frequency: 400kHz

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    id: oled_display
    pages:
      - id: page_empty
        lambda: |-
          it.fill(COLOR_OFF);
      - id: page_start
        lambda: |-
          it.image(32, 0, id(pic_starting));
      - id: page_listening
        lambda: |-
          it.image(32, 0, id(pic_listening));
      - id: page_thinking
        lambda: |-
          it.image(32, 0, id(pic_thinking));
      - id: page_answering
        lambda: |-
          it.image(32, 0, id(pic_answering));
      - id: page_error
        lambda: |-
          it.image(32, 0, id(pic_error));

############################ Audio

i2s_audio:
  - id: i2s_in
    i2s_lrclk_pin: GPIO26   # INMP441 WS
    i2s_bclk_pin: GPIO27    # INMP441 SCK
  - id: i2s_out
    i2s_lrclk_pin: GPIO33   # MAX98357 LRC
    i2s_bclk_pin: GPIO32    # MAX98357 SCK

microphone:
  platform: i2s_audio
  id: external_microphone
  adc_type: external
  i2s_audio_id: i2s_in
  i2s_din_pin: GPIO4 # INMP441 DO
  channel: right
  pdm: false

media_player:
  - platform: i2s_audio
    id: media_out
    name: Media Player
    dac_type: external
    i2s_audio_id: i2s_out
    i2s_dout_pin: GPIO25 # MAX98357 DIN
    mode: mono

############################ Voice Assistant

voice_assistant:
  id: voice_assist
  microphone: external_microphone
  media_player: media_out
  noise_suppression_level: 4
  auto_gain: 31dBFS
  volume_multiplier: 64.0
  use_wake_word: false
  on_tts_start:
    - lambda: id(ui_phase) = ${ui_state_replying};
    - script.execute: control_ui
  on_end:
    - wait_until:
        not:
          media_player.is_playing:
    - lambda: id(ui_phase) = ${ui_state_idle};
    - script.execute: control_ui
  on_error:
    - lambda: id(ui_phase) = ${ui_state_error};
    - script.execute: control_ui
  on_client_connected:
    - lambda: id(ui_phase) = ${ui_state_idle};
    - script.execute: control_ui

############################ Scripts

script:
  - id: control_ui
    then:
      - lambda: |
          switch(id(ui_phase)) {
            default:
            case ${ui_state_starting}:
              id(led_strip).turn_on().set_effect("Rotating Red").perform();
              id(oled_display).show_page(page_start);
              id(oled_display).update();
            break;
            case ${ui_state_idle}:
              id(led_strip).turn_off().perform();
              id(oled_display).show_page(page_empty);
              id(oled_display).update();
            break;
            case ${ui_state_listening}:
              id(led_strip).turn_on().set_rgb(0, 1, 0).set_brightness(0.1).set_effect("Slow Pulse").perform();
              id(oled_display).show_page(page_listening);
              id(oled_display).update();
              id(led_listening).turn_on().perform();
            break;
            case ${ui_state_thinking}:
              id(led_strip).turn_on().set_brightness(0.5).set_effect("Rotating Green").perform();
              id(oled_display).show_page(page_thinking);
              id(oled_display).update();
              id(led_listening).turn_off().perform();
            break;
            case ${ui_state_replying}:
              id(led_strip).turn_on().set_rgb(0, 0, 1).set_brightness(0.1).set_effect("Fast Pulse").perform();
              id(oled_display).show_page(page_answering);
              id(oled_display).update();
            break;
            case ${ui_state_error}:
              id(led_strip).turn_on().set_rgb(1, 0, 0).set_brightness(0.1).set_effect("Fast Pulse").perform();
              id(oled_display).show_page(page_error);
              id(oled_display).update();
            break;
            case ${ui_state_muted}:
            break;
          }
